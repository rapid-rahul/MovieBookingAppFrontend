{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\ndescribe('AppComponent', () => {\n  let component = AppComponent.prototype;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [RouterTestingModule, HttpClientTestingModule],\n      declarations: [AppComponent],\n      providers: [AppComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AppComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    component = TestBed.inject(AppComponent);\n  });\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n  it(`should have as title 'moviebookingapp'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('moviebookingapp');\n  });\n  it('should render title', () => {\n    var _a;\n\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement;\n    expect((_a = compiled.querySelector('.content span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('moviebookingapp app is running!');\n  });\n  describe('logout', () => {\n    it('should check logout', () => {\n      component.logout();\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/2106472/Downloads/moviebookingapp-main/moviebookingapp-main/moviebookingappfrontend/src/app/app.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","RouterTestingModule","AppComponent","describe","component","prototype","fixture","beforeEach","configureTestingModule","imports","declarations","providers","compileComponents","createComponent","componentInstance","detectChanges","inject","it","app","expect","toBeTruthy","title","toEqual","_a","compiled","nativeElement","querySelector","textContent","toContain","logout"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACAC,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC3B,MAAIC,SAAS,GAAGF,YAAY,CAACG,SAA7B;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMP,OAAO,CAACQ,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CACLR,mBADK,EAELF,uBAFK,CADwB;AAKjCW,MAAAA,YAAY,EAAE,CACVR,YADU,CALmB;AAQjCS,MAAAA,SAAS,EAAE,CAACT,YAAD;AARsB,KAA/B,EASHU,iBATG,EAAN;AAUH,GAXS,EAAV;AAYAL,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBX,YAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGE,OAAO,CAACQ,iBAApB;AACAR,IAAAA,OAAO,CAACS,aAAR;AACAX,IAAAA,SAAS,GAAGJ,OAAO,CAACgB,MAAR,CAAed,YAAf,CAAZ;AACH,GALS,CAAV;AAMAe,EAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAC9B,UAAMX,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBX,YAAxB,CAAhB;AACA,UAAMgB,GAAG,GAAGZ,OAAO,CAACQ,iBAApB;AACAK,IAAAA,MAAM,CAACD,GAAD,CAAN,CAAYE,UAAZ;AACH,GAJC,CAAF;AAKAH,EAAAA,EAAE,CAAE,wCAAF,EAA2C,MAAM;AAC/C,UAAMX,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBX,YAAxB,CAAhB;AACA,UAAMgB,GAAG,GAAGZ,OAAO,CAACQ,iBAApB;AACAK,IAAAA,MAAM,CAACD,GAAG,CAACG,KAAL,CAAN,CAAkBC,OAAlB,CAA0B,iBAA1B;AACH,GAJC,CAAF;AAKAL,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5B,QAAIM,EAAJ;;AACA,UAAMjB,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBX,YAAxB,CAAhB;AACAI,IAAAA,OAAO,CAACS,aAAR;AACA,UAAMS,QAAQ,GAAGlB,OAAO,CAACmB,aAAzB;AACAN,IAAAA,MAAM,CAAC,CAACI,EAAE,GAAGC,QAAQ,CAACE,aAAT,CAAuB,eAAvB,CAAN,MAAmD,IAAnD,IAA2DH,EAAE,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoFA,EAAE,CAACI,WAAxF,CAAN,CAA2GC,SAA3G,CAAqH,iCAArH;AACH,GANC,CAAF;AAOAzB,EAAAA,QAAQ,CAAC,QAAD,EAAW,MAAM;AACrBc,IAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC5Bb,MAAAA,SAAS,CAACyB,MAAV;AACH,KAFC,CAAF;AAGH,GAJO,CAAR;AAKH,CA3CO,CAAR","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { AppComponent } from './app.component';\r\ndescribe('AppComponent', () => {\r\n    let component = AppComponent.prototype;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [\r\n                RouterTestingModule,\r\n                HttpClientTestingModule\r\n            ],\r\n            declarations: [\r\n                AppComponent\r\n            ],\r\n            providers: [AppComponent]\r\n        }).compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(AppComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        component = TestBed.inject(AppComponent);\r\n    });\r\n    it('should create the app', () => {\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        const app = fixture.componentInstance;\r\n        expect(app).toBeTruthy();\r\n    });\r\n    it(`should have as title 'moviebookingapp'`, () => {\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        const app = fixture.componentInstance;\r\n        expect(app.title).toEqual('moviebookingapp');\r\n    });\r\n    it('should render title', () => {\r\n        var _a;\r\n        const fixture = TestBed.createComponent(AppComponent);\r\n        fixture.detectChanges();\r\n        const compiled = fixture.nativeElement;\r\n        expect((_a = compiled.querySelector('.content span')) === null || _a === void 0 ? void 0 : _a.textContent).toContain('moviebookingapp app is running!');\r\n    });\r\n    describe('logout', () => {\r\n        it('should check logout', () => {\r\n            component.logout();\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}