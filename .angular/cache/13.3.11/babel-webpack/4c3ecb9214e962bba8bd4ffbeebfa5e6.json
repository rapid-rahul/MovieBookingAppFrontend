{"ast":null,"code":"function cov_2r6i1nvm10() {\n  var path = \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\src\\\\app\\\\authguard.service.ts\";\n  var hash = \"fcfcee2eed7c0fb6cbd55937395145e7dd4c5a4d\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\src\\\\app\\\\authguard.service.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 23\n        },\n        end: {\n          line: 17,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 7,\n          column: 8\n        },\n        end: {\n          line: 7,\n          column: 41\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 8\n        },\n        end: {\n          line: 8,\n          column: 27\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 14,\n          column: 9\n        }\n      },\n      \"4\": {\n        start: {\n          line: 12,\n          column: 12\n        },\n        end: {\n          line: 12,\n          column: 76\n        }\n      },\n      \"5\": {\n        start: {\n          line: 13,\n          column: 12\n        },\n        end: {\n          line: 13,\n          column: 39\n        }\n      },\n      \"6\": {\n        start: {\n          line: 15,\n          column: 8\n        },\n        end: {\n          line: 15,\n          column: 20\n        }\n      },\n      \"7\": {\n        start: {\n          line: 18,\n          column: 0\n        },\n        end: {\n          line: 21,\n          column: 2\n        }\n      },\n      \"8\": {\n        start: {\n          line: 18,\n          column: 40\n        },\n        end: {\n          line: 21,\n          column: 1\n        }\n      },\n      \"9\": {\n        start: {\n          line: 22,\n          column: 0\n        },\n        end: {\n          line: 26,\n          column: 21\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 6,\n            column: 4\n          },\n          end: {\n            line: 6,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 6,\n            column: 37\n          },\n          end: {\n            line: 9,\n            column: 5\n          }\n        },\n        line: 6\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 10,\n            column: 30\n          },\n          end: {\n            line: 16,\n            column: 5\n          }\n        },\n        line: 10\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 18,\n            column: 34\n          },\n          end: {\n            line: 18,\n            column: 35\n          }\n        },\n        loc: {\n          start: {\n            line: 18,\n            column: 40\n          },\n          end: {\n            line: 21,\n            column: 1\n          }\n        },\n        line: 18\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 8\n          },\n          end: {\n            line: 14,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 11,\n            column: 8\n          },\n          end: {\n            line: 14,\n            column: 9\n          }\n        }, {\n          start: {\n            line: undefined,\n            column: undefined\n          },\n          end: {\n            line: undefined,\n            column: undefined\n          }\n        }],\n        line: 11\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"authguard.service.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\src\\\\app\\\\authguard.service.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAuC,MAAM,EAAgC,MAAM,iBAAiB,CAAC;AAE5G,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;IAKtC,gBAAgB,SAAhB,gBAAgB;IAE3B,YAAoB,YAA2B,EAAU,KAAY;QAAjD,iBAAY,GAAZ,YAAY,CAAe;QAAU,UAAK,GAAL,KAAK,CAAO;IAAI,CAAC;IAC1E,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,IAAG,IAAI,CAAC,YAAY,CAAC,MAAM,IAAE,IAAI,EAAC;YAChC,KAAK,CAAC,wDAAwD,CAAC,CAAA;YAC7D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;SAC7B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;;YAfQ,cAAc;YAFuB,MAAM;;AAOvC,gBAAgB;IAH5B,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAU5B;SAVY,gBAAgB\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\\nimport { Observable } from 'rxjs';\\nimport { BackendService } from './backend.service';\\n\\n@Injectable({\\n  providedIn: 'root'\\n})\\nexport class AuthguardService implements CanActivate{\\n\\n  constructor(private routeService:BackendService, private route:Router) { }\\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\\n    if(this.routeService.status==true){\\n      alert(\\\"You are not eligible to access this page without login\\\")\\n        this.route.navigate([\\\"/\\\"])\\n    }\\n    return true;\\n  }\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"fcfcee2eed7c0fb6cbd55937395145e7dd4c5a4d\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2r6i1nvm10 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2r6i1nvm10();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from './backend.service';\ncov_2r6i1nvm10().s[0]++;\nlet AuthguardService = class AuthguardService {\n  constructor(routeService, route) {\n    cov_2r6i1nvm10().f[0]++;\n    cov_2r6i1nvm10().s[1]++;\n    this.routeService = routeService;\n    cov_2r6i1nvm10().s[2]++;\n    this.route = route;\n  }\n\n  canActivate(route, state) {\n    cov_2r6i1nvm10().f[1]++;\n    cov_2r6i1nvm10().s[3]++;\n\n    if (this.routeService.status == true) {\n      cov_2r6i1nvm10().b[0][0]++;\n      cov_2r6i1nvm10().s[4]++;\n      alert(\"You are not eligible to access this page without login\");\n      cov_2r6i1nvm10().s[5]++;\n      this.route.navigate([\"/\"]);\n    } else {\n      cov_2r6i1nvm10().b[0][1]++;\n    }\n\n    cov_2r6i1nvm10().s[6]++;\n    return true;\n  }\n\n};\ncov_2r6i1nvm10().s[7]++;\n\nAuthguardService.ctorParameters = () => {\n  cov_2r6i1nvm10().f[2]++;\n  cov_2r6i1nvm10().s[8]++;\n  return [{\n    type: BackendService\n  }, {\n    type: Router\n  }];\n};\n\ncov_2r6i1nvm10().s[9]++;\nAuthguardService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthguardService);\nexport { AuthguardService };","map":{"version":3,"sources":["C:/Users/2106472/Downloads/moviebookingapp-main/moviebookingapp-main/moviebookingappfrontend/src/app/authguard.service.ts"],"names":["__decorate","Injectable","Router","BackendService","AuthguardService","constructor","routeService","route","canActivate","state","status","alert","navigate","ctorParameters","type","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,YAAD,EAAeC,KAAf,EAAsB;AAAA;AAAA;AAC7B,SAAKD,YAAL,GAAoBA,YAApB;AAD6B;AAE7B,SAAKC,KAAL,GAAaA,KAAb;AACH;;AACDC,EAAAA,WAAW,CAACD,KAAD,EAAQE,KAAR,EAAe;AAAA;AAAA;;AACtB,QAAI,KAAKH,YAAL,CAAkBI,MAAlB,IAA4B,IAAhC,EAAsC;AAAA;AAAA;AAClCC,MAAAA,KAAK,CAAC,wDAAD,CAAL;AADkC;AAElC,WAAKJ,KAAL,CAAWK,QAAX,CAAoB,CAAC,GAAD,CAApB;AACH,KAHD;AAAA;AAAA;;AADsB;AAKtB,WAAO,IAAP;AACH;;AAXyC,CAA9C;;;AAaAR,gBAAgB,CAACS,cAAjB,GAAkC,MAAM;AAAA;AAAA;AAAA,UACpC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GADoC,EAEpC;AAAEW,IAAAA,IAAI,EAAEZ;AAAR,GAFoC;AAGvC,CAHD;;;AAIAE,gBAAgB,GAAGJ,UAAU,CAAC,CAC1BC,UAAU,CAAC;AACPc,EAAAA,UAAU,EAAE;AADL,CAAD,CADgB,CAAD,EAI1BX,gBAJ0B,CAA7B;AAKA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BackendService } from './backend.service';\r\nlet AuthguardService = class AuthguardService {\r\n    constructor(routeService, route) {\r\n        this.routeService = routeService;\r\n        this.route = route;\r\n    }\r\n    canActivate(route, state) {\r\n        if (this.routeService.status == true) {\r\n            alert(\"You are not eligible to access this page without login\");\r\n            this.route.navigate([\"/\"]);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nAuthguardService.ctorParameters = () => [\r\n    { type: BackendService },\r\n    { type: Router }\r\n];\r\nAuthguardService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    })\r\n], AuthguardService);\r\nexport { AuthguardService };\r\n"]},"metadata":{},"sourceType":"module"}