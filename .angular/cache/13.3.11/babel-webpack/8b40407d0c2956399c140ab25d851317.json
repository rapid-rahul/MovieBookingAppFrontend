{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { of, throwError } from 'rxjs';\nimport { MoviesService } from '../movies.service';\nimport { SearchMovieComponent } from './search-movie.component';\ndescribe('SearchMovieComponent', () => {\n  let component;\n  let fixture;\n  let service;\n  let router;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [SearchMovieComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), NgxPaginationModule],\n      providers: [SearchMovieComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(SearchMovieComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    component = TestBed.inject(SearchMovieComponent);\n    service = TestBed.inject(MoviesService);\n    router = TestBed.inject(Router);\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  describe('movies list', () => {\n    it('get movies list', () => {\n      const movies = [{\n        key: {\n          movieName: 'Apple',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 250\n      }, {\n        key: {\n          movieName: 'Avenger',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 350\n      }];\n      component.getMovies();\n      spyOn(service, 'getMovies').and.returnValue(of(movieName));\n      service.getMovies('A').subscribe(data => {\n        expect(data).toEqual(movies);\n      });\n    });\n    it('search movie error', () => {\n      component.movies.length = 0;\n      let movie = [];\n      const movies = [{\n        key: {\n          movieName: 'Apple',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 250\n      }, {\n        key: {\n          movieName: 'Avenger',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 350\n      }];\n      component.getMovies();\n      spyOn(service, 'getMovies').and.returnValue(throwError({\n        status: 404\n      }));\n      service.getMovies('A').subscribe(data => {}, error => {});\n    });\n    it('book ticket', () => {\n      const movie = {\n        key: {\n          movieName: 'RRR',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 250\n      }; //component.bookTicket(movie);\n\n      const navigateSpy = spyOn(router, 'navigate'); //component.bookTicket(movie)\n\n      expect(navigateSpy).toHaveBeenCalledWith(['bookticket']);\n    });\n    it('delete movie', () => {\n      const msg = 'Movie Deleted Successfully';\n      let response = '';\n      component.deleteMovie('RRR', 'PVR');\n      spyOn(service, 'deleteMovie').and.returnValue(of(msg));\n      service.deleteMovie('RRR', 'PVR').subscribe(data => {\n        response = data;\n      });\n      expect(response).toEqual(msg);\n    });\n    it('movie details', () => {\n      const movie = {\n        key: {\n          movieName: 'RRR',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 250\n      }; //component.movieDetails(movie);\n\n      const navigateSpy = spyOn(router, 'navigate'); //component.movieDetails(movie)\n\n      expect(navigateSpy).toHaveBeenCalledWith(['moviedetails']);\n    });\n    it('change', () => {\n      component.onTableDataChange('');\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/2106472/Downloads/moviebookingapp-main/moviebookingapp-main/moviebookingappfrontend/src/app/search-movie/search-movie.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","Router","RouterTestingModule","NgxPaginationModule","of","throwError","MoviesService","SearchMovieComponent","describe","component","fixture","service","router","beforeEach","configureTestingModule","declarations","imports","withRoutes","providers","compileComponents","createComponent","componentInstance","detectChanges","inject","it","expect","toBeTruthy","movies","key","movieName","theatreName","totalNoOfTickets","getMovies","spyOn","and","returnValue","subscribe","data","toEqual","length","movie","status","error","navigateSpy","toHaveBeenCalledWith","msg","response","deleteMovie","onTableDataChange"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { Router } from '@angular/router';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { of, throwError } from 'rxjs';\r\nimport { MoviesService } from '../movies.service';\r\nimport { SearchMovieComponent } from './search-movie.component';\r\ndescribe('SearchMovieComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let service;\r\n    let router;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [SearchMovieComponent],\r\n            imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), NgxPaginationModule],\r\n            providers: [SearchMovieComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(SearchMovieComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        component = TestBed.inject(SearchMovieComponent);\r\n        service = TestBed.inject(MoviesService);\r\n        router = TestBed.inject(Router);\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    describe('movies list', () => {\r\n        it('get movies list', () => {\r\n            const movies = [{ key: { movieName: 'Apple', theatreName: \"PVR\" }, totalNoOfTickets: 250 },\r\n                { key: { movieName: 'Avenger', theatreName: \"PVR\" }, totalNoOfTickets: 350 }];\r\n            component.getMovies();\r\n            spyOn(service, 'getMovies').and.returnValue(of(movieName));\r\n            service.getMovies('A').subscribe(data => {\r\n                expect(data).toEqual(movies);\r\n            });\r\n        });\r\n        it('search movie error', () => {\r\n            component.movies.length = 0;\r\n            let movie = [];\r\n            const movies = [{ key: { movieName: 'Apple', theatreName: \"PVR\" }, totalNoOfTickets: 250 },\r\n                { key: { movieName: 'Avenger', theatreName: \"PVR\" }, totalNoOfTickets: 350 }];\r\n            component.getMovies();\r\n            spyOn(service, 'getMovies').and.returnValue(throwError({ status: 404 }));\r\n            service.getMovies('A').subscribe(data => {\r\n            }, (error) => {\r\n            });\r\n        });\r\n        it('book ticket', () => {\r\n            const movie = { key: { movieName: 'RRR', theatreName: \"PVR\" }, totalNoOfTickets: 250 };\r\n            //component.bookTicket(movie);\r\n            const navigateSpy = spyOn(router, 'navigate');\r\n            //component.bookTicket(movie)\r\n            expect(navigateSpy).toHaveBeenCalledWith(['bookticket']);\r\n        });\r\n        it('delete movie', () => {\r\n            const msg = 'Movie Deleted Successfully';\r\n            let response = '';\r\n            component.deleteMovie('RRR', 'PVR');\r\n            spyOn(service, 'deleteMovie').and.returnValue(of(msg));\r\n            service.deleteMovie('RRR', 'PVR').subscribe(data => {\r\n                response = data;\r\n            });\r\n            expect(response).toEqual(msg);\r\n        });\r\n        it('movie details', () => {\r\n            const movie = { key: { movieName: 'RRR', theatreName: \"PVR\" }, totalNoOfTickets: 250 };\r\n            //component.movieDetails(movie);\r\n            const navigateSpy = spyOn(router, 'navigate');\r\n            //component.movieDetails(movie)\r\n            expect(navigateSpy).toHaveBeenCalledWith(['moviedetails']);\r\n        });\r\n        it('change', () => {\r\n            component.onTableDataChange('');\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}