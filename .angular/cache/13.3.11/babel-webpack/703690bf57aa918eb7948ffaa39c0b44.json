{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { of } from 'rxjs';\nimport { BackendService } from '../backend.service';\nimport { ForgotPassword } from '../ForgotPassword';\nimport { ForgotpasswordComponent } from './forgotpassword.component';\ndescribe('ForgotpasswordComponent', () => {\n  let component;\n  let fixture;\n  let service;\n  let router;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [ForgotpasswordComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), FormsModule],\n      providers: [ForgotpasswordComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ForgotpasswordComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    component = TestBed.inject(ForgotpasswordComponent);\n    service = TestBed.inject(BackendService);\n    router = TestBed.inject(Router);\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  describe('forgot password', () => {\n    it('change password', () => {\n      const status = 'password changed';\n      component.form.password = '12345';\n      component.form.confirmPassword = '12345';\n      component.forgotPassword();\n      spyOn(service, 'changePassword').and.returnValue(of(status));\n      service.changePassword('12345', new ForgotPassword('12345', '12345')).subscribe(data => {\n        expect(data).toEqual(status);\n      });\n      const navigateSpy = spyOn(router, 'navigate');\n      component.forgotPassword();\n      expect(navigateSpy).toHaveBeenCalledWith(['']);\n    });\n    it('reset form', () => {\n      component.cancel();\n      const navigateSpy = spyOn(router, 'navigate');\n      component.cancel();\n      expect(navigateSpy).toHaveBeenCalledWith(['']);\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/2106472/Downloads/moviebookingapp-main/moviebookingapp-main/moviebookingappfrontend/src/app/forgotpassword/forgotpassword.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","FormsModule","Router","RouterTestingModule","of","BackendService","ForgotPassword","ForgotpasswordComponent","describe","component","fixture","service","router","beforeEach","configureTestingModule","declarations","imports","withRoutes","providers","compileComponents","createComponent","componentInstance","detectChanges","inject","it","expect","toBeTruthy","status","form","password","confirmPassword","forgotPassword","spyOn","and","returnValue","changePassword","subscribe","data","toEqual","navigateSpy","toHaveBeenCalledWith","cancel"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { of } from 'rxjs';\r\nimport { BackendService } from '../backend.service';\r\nimport { ForgotPassword } from '../ForgotPassword';\r\nimport { ForgotpasswordComponent } from './forgotpassword.component';\r\ndescribe('ForgotpasswordComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let service;\r\n    let router;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [ForgotpasswordComponent],\r\n            imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), FormsModule],\r\n            providers: [ForgotpasswordComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(ForgotpasswordComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        component = TestBed.inject(ForgotpasswordComponent);\r\n        service = TestBed.inject(BackendService);\r\n        router = TestBed.inject(Router);\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    describe('forgot password', () => {\r\n        it('change password', () => {\r\n            const status = 'password changed';\r\n            component.form.password = '12345';\r\n            component.form.confirmPassword = '12345';\r\n            component.forgotPassword();\r\n            spyOn(service, 'changePassword').and.returnValue(of(status));\r\n            service.changePassword('12345', new ForgotPassword('12345', '12345')).subscribe(data => {\r\n                expect(data).toEqual(status);\r\n            });\r\n            const navigateSpy = spyOn(router, 'navigate');\r\n            component.forgotPassword();\r\n            expect(navigateSpy).toHaveBeenCalledWith(['']);\r\n        });\r\n        it('reset form', () => {\r\n            component.cancel();\r\n            const navigateSpy = spyOn(router, 'navigate');\r\n            component.cancel();\r\n            expect(navigateSpy).toHaveBeenCalledWith(['']);\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}