{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\2106472\\\\Downloads\\\\moviebookingapp-main\\\\moviebookingapp-main\\\\moviebookingappfrontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { Router } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { of } from 'rxjs';\nimport { MoviesService } from '../movies.service';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MovieslistComponent } from './movieslist.component';\ndescribe('MovieslistComponent', () => {\n  let component;\n  let fixture;\n  let service;\n  let router;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [MovieslistComponent],\n      imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), NgxPaginationModule],\n      providers: [MovieslistComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(MovieslistComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n    component = TestBed.inject(MovieslistComponent);\n    service = TestBed.inject(MoviesService);\n    router = TestBed.inject(Router);\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  describe('movies list', () => {\n    it('get movies list', () => {\n      const movies = [{\n        key: {\n          movieName: 'RRR',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 250\n      }, {\n        key: {\n          movieName: 'Avenger',\n          theatreName: \"PVR\"\n        },\n        totalNoOfTickets: 350\n      }];\n      component.getMoviesList();\n      spyOn(service, 'getAllMovies').and.returnValue(of(movies));\n      service.getAllMovies().subscribe(data => {\n        expect(data).toEqual(movies);\n      });\n    });\n    it('get movie', () => {\n      component.getMovie();\n    });\n    it('get movie', () => {\n      component.name = 'RRR';\n      component.getMovie();\n      const navigateSpy = spyOn(router, 'navigate');\n      component.getMovie();\n      expect(navigateSpy).toHaveBeenCalledWith(['search']);\n    }); //it('book ticket',()=>{\n    //const movie ={key:{movieName:'RRR',theatreName:\"PVR\"},totalNoOfTickets:250};\n    //component.bookTicket(movie);\n    //const navigateSpy = spyOn(router, 'navigate')\n    //component.bookTicket(movie)\n    //expect(navigateSpy).toHaveBeenCalledWith(['bookticket']);\n    //})\n\n    it('delete movie', () => {\n      const msg = 'Movie Deleted Successfully';\n      let response = '';\n      component.deleteMovie('RRR', 'PVR');\n      spyOn(service, 'deleteMovie').and.returnValue(of(msg));\n      service.deleteMovie('RRR', 'PVR').subscribe(data => {\n        response = data;\n      });\n      expect(response).toEqual(msg);\n    }); //it('movie details',()=>{\n    //const movie ={key:{},totalNoOfTickets:250};\n    //component.movieDetails(movie);\n    //const navigateSpy = spyOn(router, 'navigate')\n    //component.movieDetails(movie)\n    //expect(navigateSpy).toHaveBeenCalledWith(['moviedetails']);\n    //})\n\n    it('change', () => {\n      component.onTableDataChange('');\n    });\n  });\n});","map":{"version":3,"sources":["C:/Users/2106472/Downloads/moviebookingapp-main/moviebookingapp-main/moviebookingappfrontend/src/app/movieslist/movieslist.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","Router","RouterTestingModule","of","MoviesService","NgxPaginationModule","MovieslistComponent","describe","component","fixture","service","router","beforeEach","configureTestingModule","declarations","imports","withRoutes","providers","compileComponents","createComponent","componentInstance","detectChanges","inject","it","expect","toBeTruthy","movies","key","movieName","theatreName","totalNoOfTickets","getMoviesList","spyOn","and","returnValue","getAllMovies","subscribe","data","toEqual","getMovie","name","navigateSpy","toHaveBeenCalledWith","msg","response","deleteMovie","onTableDataChange"],"mappings":"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","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { Router } from '@angular/router';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\nimport { of } from 'rxjs';\r\nimport { MoviesService } from '../movies.service';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { MovieslistComponent } from './movieslist.component';\r\ndescribe('MovieslistComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let service;\r\n    let router;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [MovieslistComponent],\r\n            imports: [HttpClientTestingModule, RouterTestingModule.withRoutes([]), NgxPaginationModule],\r\n            providers: [MovieslistComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(MovieslistComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n        component = TestBed.inject(MovieslistComponent);\r\n        service = TestBed.inject(MoviesService);\r\n        router = TestBed.inject(Router);\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    describe('movies list', () => {\r\n        it('get movies list', () => {\r\n            const movies = [{ key: { movieName: 'RRR', theatreName: \"PVR\" }, totalNoOfTickets: 250 },\r\n                { key: { movieName: 'Avenger', theatreName: \"PVR\" }, totalNoOfTickets: 350 }];\r\n            component.getMoviesList();\r\n            spyOn(service, 'getAllMovies').and.returnValue(of(movies));\r\n            service.getAllMovies().subscribe(data => {\r\n                expect(data).toEqual(movies);\r\n            });\r\n        });\r\n        it('get movie', () => {\r\n            component.getMovie();\r\n        });\r\n        it('get movie', () => {\r\n            component.name = 'RRR';\r\n            component.getMovie();\r\n            const navigateSpy = spyOn(router, 'navigate');\r\n            component.getMovie();\r\n            expect(navigateSpy).toHaveBeenCalledWith(['search']);\r\n        });\r\n        //it('book ticket',()=>{\r\n        //const movie ={key:{movieName:'RRR',theatreName:\"PVR\"},totalNoOfTickets:250};\r\n        //component.bookTicket(movie);\r\n        //const navigateSpy = spyOn(router, 'navigate')\r\n        //component.bookTicket(movie)\r\n        //expect(navigateSpy).toHaveBeenCalledWith(['bookticket']);\r\n        //})\r\n        it('delete movie', () => {\r\n            const msg = 'Movie Deleted Successfully';\r\n            let response = '';\r\n            component.deleteMovie('RRR', 'PVR');\r\n            spyOn(service, 'deleteMovie').and.returnValue(of(msg));\r\n            service.deleteMovie('RRR', 'PVR').subscribe(data => {\r\n                response = data;\r\n            });\r\n            expect(response).toEqual(msg);\r\n        });\r\n        //it('movie details',()=>{\r\n        //const movie ={key:{},totalNoOfTickets:250};\r\n        //component.movieDetails(movie);\r\n        //const navigateSpy = spyOn(router, 'navigate')\r\n        //component.movieDetails(movie)\r\n        //expect(navigateSpy).toHaveBeenCalledWith(['moviedetails']);\r\n        //})\r\n        it('change', () => {\r\n            component.onTableDataChange('');\r\n        });\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}